#!/bin/bash -e

DOWNLOAD_URL="${DOWNLOAD_URL:-https://releases.ubuntu.com/22.04}"
ORIG_ISO="${ORIG_ISO:-ubuntu-22.04.1-live-server-amd64.iso}"
INSTALL_TYPE="${INSTALL_TYPE:-desktop}"
TMP_DIR=iso
POTOS_CLIENT_NAME="${POTOS_CLIENT_NAME:-Potos Linux Client}"

REQUIREMENTS="7z gfxboot xorriso wget curl sha256sum"

check_requirements() {
  for tool in ${REQUIREMENTS}; do
    if ! which "${tool}" > /dev/null; then
      echo "${tool} is missing!"
      exit 1
    fi
  done
}

build_iso() {
  if [[ -d "${TMP_DIR}" ]]; then
    rm -rf "${TMP_DIR}"
  fi

  if [[ ! -f "${ORIG_ISO}" ]]; then
    wget -nv "${DOWNLOAD_URL}/${ORIG_ISO}"
  fi

  if [[ ! -f SHA256SUMS ]]; then
    wget -nv "${DOWNLOAD_URL}/SHA256SUMS"
  fi

  if ! sha256sum --ignore-missing --quiet -c SHA256SUMS; then
    echo "sha256sum check failed"
    exit 1
  fi

  7z x "${ORIG_ISO}" -o"${TMP_DIR}"

  rm -rf "${TMP_DIR}/pool"

  cp -r autoinstall/${INSTALL_TYPE}-uefi "${TMP_DIR}/nocloud-uefi"
  cp -r autoinstall/${INSTALL_TYPE}-bios "${TMP_DIR}/nocloud-bios"
  cp -r contrib "${TMP_DIR}/contrib"

  printf "${POTOS_CLIENT_NAME} 22.04 (%s)\n" $(date +%Y%m%d-%H%M) > "${TMP_DIR}/contrib/${POTOS_CLIENT_SHORTNAME}-version"
  echo "${ENVIRONMENT}" > "${TMP_DIR}/contrib/${POTOS_CLIENT_SHORTNAME}-environment"

  if [[ ! -d images ]]; then
    mkdir images
  fi

  rm -rf "${TMP_DIR}/[BOOT]"

  sed -i "s|${TMP_DIR}/|./|g" "${TMP_DIR}/md5sum.txt"

  cp bootmenu/grub/grub.cfg "${TMP_DIR}/boot/grub/grub.cfg"

# isolinux not required anymore since ubuntu 22.04, it uses grub.cfg
# gfxboot -a "${TMP_DIR}/isolinux/bootlogo" --add-files images/splash.pcx
# gfxboot -a "${TMP_DIR}/isolinux/bootlogo" --add-files images/access.pcx
# gfxboot -a "${TMP_DIR}/isolinux/bootlogo" --change-config foreground=0x000000
# gfxboot -a "${TMP_DIR}/isolinux/bootlogo" --change-config background=0xBF4C00
# gfxboot -a "${TMP_DIR}/isolinux/bootlogo" --change-config screen-colour=0xFFFFFF
# gfxboot -a "${TMP_DIR}/isolinux/bootlogo" --default-language en_US
# gfxboot -a "${TMP_DIR}/isolinux/bootlogo" --rm-config hidden-timeout
# #gfxboot -a "${TMP_DIR}/isolinux/bootlogo" --change-config hidden-timeout=1

MBR_FILE=boot_hybrid.img

dd if=${ORIG_ISO} bs=1 count=432 of=${MBR_FILE}
dd if=${ORIG_ISO} bs=512 skip=2855516 count=8496 of=efi.img

xorriso -as mkisofs -r -V '${POTOS_CLIENT_NAME} 22.04' \
-o ${POTOS_CLIENT_SHORTNAME}-installer-${ENVIRONMENT}.iso \
--grub2-mbr ${MBR_FILE} \
-partition_offset 16 \
--mbr-force-bootable \
-append_partition 2 28732ac11ff8d211ba4b00a0c93ec93b efi.img \
-appended_part_as_gpt \
-iso_mbr_part_type a2a0d0ebe5b9334487c068b6b72699c7 \
-c '/boot.catalog' \
-b '/boot/grub/i386-pc/eltorito.img' \
        -no-emul-boot -boot-load-size 4 -boot-info-table --grub2-boot-info \
-eltorito-alt-boot \
-e '--interval:appended_partition_2:::' \
        -no-emul-boot \
"${TMP_DIR}"

  rm -rf "${TMP_DIR}"
  rm -f "${MBR_FILE}"
  cp ${POTOS_CLIENT_SHORTNAME}*.iso* potos-images/.

}

generate_checksum() {
  if [[ -f ${POTOS_CLIENT_SHORTNAME}-installer-${ENVIRONMENT}.iso ]]; then
    sha256sum ${POTOS_CLIENT_SHORTNAME}-installer-${ENVIRONMENT}.iso > ${POTOS_CLIENT_SHORTNAME}-installer-${ENVIRONMENT}.iso.sha256sum
  fi
}

usage() {
  cat <<EOF
$0 {-p|-d}
  -p (production environment, default)
  -d (develop environment)

EXAMPLE:
  # Build a production desktop ISO
  $0 -p
EOF
}

main() {
  if [[ -z "${POTOS_ENV}" ]]; then
    echo "Please provide $POTOS_ENV develop or production"
    exit 1
  fi

  ENVIRONMENT=${POTOS_ENV}

#  while getopts dpt: opt; do
#    case "$opt" in
#      d) ENVIRONMENT=develop
#        ;;
#      p) ENVIRONMENT=production
#        ;;
#      *)
#        usage
#        ;;
#    esac
#   done

  echo "*** INFO: Got POTOS_SPECS_REPOSITORY = ${POTOS_SPECS_REPOSITORY}, POTOS_ADJOIN = ${POTOS_ADJOIN}, POTOS_ENV = ${POTOS_ENV}, POTOS_CLIENT_NAME = ${POTOS_CLIENT_NAME}, POTOS_CLIENT_SHORTNAME = ${POTOS_CLIENT_SHORTNAME}, \n POTOS_GIT_SPECS_URL= ${POTOS_GIT_SPECS_URL}, POTOS_GIT_SPECS_REPO = ${POTOS_GIT_SPECS_REPO}, POTOS_GIT_SPECS_BRANCH = ${POTOS_GIT_SPECS_BRANCH}"
  echo "*** Going build an ISO of type: ${INSTALL_TYPE} for ${ENVIRONMENT}"

  check_requirements
  build_iso
  generate_checksum
}

main "${@}"

# vim: tabstop=2 shiftwidth=2 expandtab softtabstop=2

